# Etapes du CI/CD
stages:
  - Build
  - Tests
  - Prod

build-debian:
    stage: Build
    image: debian:10
    script:
      - apt-get update -y && apt-get install curl alien -y
      - |-
        mkdir -p /tmp/app/var/lib/encryptzia
        cp -R ./app/* /tmp/app/var/lib/encryptzia
        mkdir -p /tmp/app/usr/local/bin
        cp ./build/launcher.sh /tmp/app/usr/local/bin/encryptzia
        cp -R ./build/DEBIAN /tmp/app
        chmod 755 -R /tmp/app
      - dpkg-deb -b /tmp/app /tmp/encryptzia.deb
      - |-
        [ -f /tmp/encryptzia.deb ] && echo "Build completed" || exit 1

build-docker-dev:
    stage: Build
    image: docker:stable
    when: manual
    script:
      - docker build -t "$CI_REGISTRY_IMAGE:stable" .
      - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
      - docker push "$CI_REGISTRY_IMAGE:stable"

install-debian:
    stage: Tests
    image: debian:10
    script:
      - apt-get update -y && apt-get install curl alien -y
      - |-
        mkdir -p /tmp/app/var/lib/encryptzia
        cp -R ./app/* /tmp/app/var/lib/encryptzia
        mkdir -p /tmp/app/usr/local/bin
        cp ./build/launcher.sh /tmp/app/usr/local/bin/encryptzia
        cp -R ./build/DEBIAN /tmp/app
        chmod 755 -R /tmp/app
      - dpkg-deb -b /tmp/app /tmp/encryptzia.deb
      - apt install /tmp/encryptzia.deb -y
    needs: ["build-debian"]

deploy-on-github:
  stage: Prod
  image: debian:10
  script:
    - apt-get update && apt-get install git -y
    - git remote add github git@github.com:Crash-Zeus/encryptzia.git
    - git push --mirror github
  only:
    - main
  when: manual
